args = {...}
local verbose = true;
local username, repoName, branch, directory

local function vPrint(str, tColor, bColor)
	if verbose == true then
		if term.isColor() then
			if tColor ~= nil then
				term.setTextColor(tColor)
			end
			if bColor ~= nil then
				term.setBackgroundColor(bColor)
			end
			print(str)
			term.setBackgroundColor(colors.black)
			term.setTextColor(colors.white)
		else
			print(str)
		end
	end
end

function loadAPIs()
	if fs.exists("/lib/cached_http") then
		os.loadAPI("/lib/cached_http")
	else
		vPrint("HTTP Cache library not found, downloading...", colors.orange)
		fs.makeDir("/lib")
		shell.run("pastebin", "get qGX5RxDU /lib/cached_http")
		os.loadAPI("/lib/cached_http")
	end

	if fs.exists("/lib/json") then
		os.loadAPI("/lib/json")
	else
		vPrint("JSON library not found, downloading...", colors.orange)
		fs.makeDir("/lib")
		shell.run("pastebin", "get 4nRg9CHU /lib/json")
		os.loadAPI("/lib/json")
	end
end

local function getRunningProgramDir()
	local runningProgram = shell.resolveProgram("gitGet")
	local programName = fs.getName(runningProgram)
	return runningProgram:sub( 1, #runningProgram - #programName )
end

local function download(url, saveTo)
	local download = http.get(url)
	if download then --checks if download returned true or false
		local handle = download.readAll()
		download.close()
		local file = fs.open(fs.combine(shell.dir(), saveTo), "w")
		file.write(handle)
		file.close()
		return true
	else
		return false
	end
end

local function pullDir(tbl)
	for k,v in pairs(tbl) do
		if v.type == "dir" then
			vPrint(""..v.path.."/")
			pullDir(json.decode(http.get(v._links.self).readAll()))
		else
			vPrint(""..v.path)
			download("https://raw.github.com/"..username.."/"..repoName.."/"..branch.."/"..v.path, fs.combine(directory,v.path))
		end
	end
end

os.unloadAPI("cached_http")
os.unloadAPI("json")
loadAPIs()

if shell.getRunningProgram() ~= "lib/gitGet.lua" then
	firstDir = shell.getRunningProgram()
	fs.move(firstDir, "lib/gitGet.lua")
	file = fs.open(firstDir, "w")
	file.write('args = {...};i = 1;local strArgs;while(i <= #args)do if(strArgs == nil)then strArgs = args[i];else strArgs = strArgs.." "..args[i];end i = i + 1;end shell.run("/lib/gitGet.lua", strArgs);')
	file.close()
	shell.setAlias("gitGet", "gitGet.lua")
end

if #args < 2 then
	vPrint("Usage:\n"..shell.getRunningProgram().." <user> <repo> [branch=master] [path=/]", colors.red) error()
else
	username = args[1]
	repoName = args[2]
	branch = args[3] or "master"
	directory = args[4] or ""
end

pullDir(json.decode(http.get("https://api.github.com/repos/"..username.."/"..repoName.."/contents/?ref="..branch).readAll()))

os.unloadAPI("cached_http")
os.unloadAPI("json")