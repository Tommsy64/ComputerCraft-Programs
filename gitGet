args = {...}

local verbose = true;
local function vPrint(str, tColor, bColor)
	if verbose == true then
		if term.isColor() then
			if tColor ~= nil then
				term.setTextColor(tColor)
			end
			if bColor ~= nil then
				term.setBackgroundColor(bColor)
			end
			print(str)
			term.setBackgroundColor(colors.black)
			term.setTextColor(colors.white)
		else
			print(str)
		end
	end
end

os.unloadAPI("cached_http")

if fs.exists("lib/cached_http") then
	os.loadAPI("lib/cached_http")
else
	vPrint("HTTP Cache library not found, downloading...")
	fs.makeDir("lib")
	shell.run("pastebin", "get qGX5RxDU lib/cached_http")
	os.loadAPI("lib/cached_http")
end

local username, repoName, branch, directory
local repoFiles = {}

if (#args == 3) then
	username = args[1]
	repoName = args[2]
	branch = args[3]
	if args[4] ~= "/" then
		directory = args[4]
	end
	repoFiles[1] = args[5]
elseif (#args > 3) then		
	username = args[1]
	repoName = args[2]
	branch = args[3]
	if args[4] ~= "/" then
		directory = args[4]
	end
	
	i = 5
	while (i <= #args) do
		repoFiles[i-4] = args[i]
		i = i + 1
	end 
else
	error("Usage: gitGet <username> <repoName> <branch> <directory> <repoFiles>")
end

local function get(repoFile, saveTo)
	local download
	if directory == nil then
		download = http.get("https://raw.github.com/"..username.."/"..repoName.."/"..branch.."/"..repoFile)
	else
		download = http.get("https://raw.github.com/"..username.."/"..repoName.."/"..branch.."/"..directory.."/"..repoFile)
	end
	if download then --checks if download returned true or false
		local handle = download.readAll()
		download.close()
		local file = fs.open(saveTo, "w")
		file.write(handle)
		file.close()
		return true
	else
		return false
	end
end

i = 1
x = 1
while i <= #repoFiles do
	if get(repoFiles[i], repoFiles[i]) then
		vPrint("Succesfully downloaded "..repoFiles[i])
		i = i + 1
		x = 0
	else
		if x < 3 then
			vPrint("Failed to download "..repoFiles[i].."! Trial "..x, colors.orange)
			sleep(2)
			x = x + 1
		else
			vPrint("Could not download "..repoFiles[i].." after "..x.." tries! Skipping!", colors.red)
			i = i + 1
		end
	end
end

os.unloadAPI("cached_http")